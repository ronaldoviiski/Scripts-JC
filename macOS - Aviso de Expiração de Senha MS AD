## Populate below variable before running command
JCAPIKey='b0c6c5aa56d55bbb13cdbbc8f5e7a3d9379a345a'

## alertDaysThreshold set to '7' by default.
## Users whose passwords will expire in 7 days or less will receive a prompt to update.
## Update the value of the variable alertDaysThreshold=''to modify the threshold.
alertDaysThreshold='15'

#------- Do not modify below this line ------
user=$(ls -la /dev/console | cut -d " " -f 4)

passwordExpirationDate=$(
    curl -s \
        -X 'POST' \
        -d '{"filter":[{"username":"'${user}'"}],"fields" : "external_password_expiration_date"}' \
        -H 'Accept: application/json' \
        -H 'Content-Type: application/json' \
        -H 'x-api-key: '${JCAPIKey}'' \
        -H 'x-org-id: 648b90e3bbddab031ee2cc5d' \
        "https://console.jumpcloud.com/api/search/systemusers"
)

regex=':".*T'
if [[ $passwordExpirationDate =~ $regex ]]; then
    unformattedDate1="${BASH_REMATCH[@]}"
    unformattedDate2=$(echo "${unformattedDate1:2}")
    expirationDay=${unformattedDate2%?}
    echo "${user} external_password_expiration_date: ${expirationDay}"
else
    echo "Could not locate the password expiration date for user ${user}."
    echo "Is ${user} enabled for password_never_expires?"
    echo "If so users enabled with password_never_expires have no password expiration date."
    exit 1
fi

Today="$(echo $(date -u +%Y-%m-%d))"

daysToExpiration=$(echo $((($(date -jf %Y-%m-%d $expirationDay +%s) - $(date -jf %Y-%m-%d $Today +%s)) / 86400)))
echo "${user} password will expire in ${daysToExpiration} days"

if [ "$daysToExpiration" -le "$alertDaysThreshold" ]; then
    echo "${daysToExpiration} within alertDaysThreshold of ${alertDaysThreshold} prompting user"
	userPrompt=$(sudo -u $user osascript -e 'display dialog "Sua senha irá expirar em '"${daysToExpiration}"' dias.\nClique em OK para fechar esse aviso e troque sua senha através do icone do JumpCloud no canto superior direito do seu Macbook e evite ter seu acesso a este computador bloqueado!" with title "Time de TI: A sua senha irá expirar!" with icon file "Applications:Jumpcloud.app:Contents:Resources:AppIcon.icns"' 2>/dev/null)


    echo "$userPrompt"

else
    echo "${daysToExpiration} NOT within alertDaysThreshold of ${alertDaysThreshold} NOT prompting user"

fi

exit 0
